version: '3'
services:
  confluent-zookeeper-service:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-network

  confluent-kafka-service:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOSTNAME: confluent-kafka-service
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://confluent-kafka-service:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      - confluent-zookeeper-service
    networks:
      - kafka-network

  kafka-producer-service:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - MODE=producer
    depends_on:
      - confluent-kafka-service
    networks:
      - kafka-network

  kafka-consumer-service:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - MODE=consumer
      - SPRING_DATASOURCE_HOST=postgres
      - SPRING_DATASOURCE_PORT=5432
      - SPRING_DATASOURCE_DB=springboot_kafka
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    # Add any other configuration required for the Kafka consumer container
    restart: on-failure
    depends_on:
      - confluent-kafka-service
      - postgres
    networks:
      - kafka-network

  postgres:
    image: postgres:latest
    hostname: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: springboot_kafka
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - kafka-network

networks:
  kafka-network:
